version: '3'

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend

  db:
    image: postgres:latest
    container_name: db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./db:/var/lib/postgresql/data

  redis:
    container_name: redis
    hostname: redis
    image: redis:latest
    volumes:
      - ./redis:/data
    restart: always

  backend:
    build:
      context: ./backend/
      dockerfile: Dockerfile
      target: prod
    container_name: backend
    volumes:
      - ./backend/:/app:cached
    depends_on:
      - db
      - redis
    environment:
      REDIS_ADDRESS: redis:6379
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: ${POSTGRES_USER}
      DB_PASS: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
      GIN_MODE: "release"
    restart: always

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    ports:
      - "1337:3000"
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD:-admin}
    volumes:
      - ./grafana:/var/lib/grafana

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml